@model IQueryable<TripsServiceBLL.DTO.Trips.ReadTripDTO>

@{
	ViewData["Title"] = "My trips";
}
<h1 class="tp-label">My Trips</h1>
<div class="row row-cols-2">
	@if (Model.Count() == 0)
	{ 
		<p class="tp-label">You have no trips.</p>
	}
	else
	{ 
		@foreach (var trip in Model)
		{ 
			<div class="col mb-4">
				<div class="card h-100 br-20">
					<div class="card-header text-light tp-gradient-standard">
						<h5 class="card-title tp-label">@trip.Name</h5>
					</div>
					<div class="card-body bg-light br-20">
						<p class="card-text tp-label" style="min-height:26px;">@trip.Description</p>
						<ul class="list-group list-group-flush">
							<li class="list-group-item text-right text-muted tp-label">Departure time: @trip.UtcStartTimeZone</li>
							<li class="list-group-item text-right text-muted tp-label">Arrival time: @trip.UtcFinishTimeZone</li>
							<li class="list-group-item tp-label"> Status: 
						@if (trip.IsCurrent)
						{
									<span class="badge badge-pill badge-info">Ongoing</span>
						}
						else if (trip.IsFuture)
						{
									<span class="badge badge-pill badge-warning">Planned</span>
						}
						else if (trip.IsPast)
						{
									<span class="badge badge-pill badge-success">Completed</span>
						} 
							</li>
						</ul>
						<div class="mb-2 mt-2" style="min-height:26px;">
						@if (trip.Rating != null)
						{							
							@await Html.PartialAsync("_DisplayTripRating", trip)									
						}
						</div>
						@{
							string editingActionName = trip.IsFuture ? "Edit" : "EditPast";
						}
						<div class="tp-gradient-reverse card-footer">
							<a href="@Url.Action("Details", new { id = trip.Id })" class="btn btn-primary ml-3 mt-2 mb-3 mr-2">Details</a> 
							<a href="@Url.Action(editingActionName, new { id = trip.Id })" class="btn btn-secondary  mt-2 mb-3 mr-2">Edit</a> 
							<a href="@Url.Action("Delete", new { id = trip.Id })" class="btn btn-danger mt-2 mb-3 mr-2 delete-btn">Delete</a>
							@if (trip.IsNeedToBeRated)
							{
								<button type="button" class="btn btn-warning mt-2 mb-3 rate-invoker" data-trip-id="@trip.Id" data-bs-toggle="modal" data-bs-target="#rateDriverModal">Rate driver</button>
							}
						</div>
					</div>					
				</div>
			</div>
		}        
	} 
</div>

@await Html.PartialAsync("_AddFeedback", new TripsServiceBLL.DTO.Feedbacks.CreateFeedbackDTO())

<script src="@Url.Content("~/js/deleteTrip.js")">
</script>
<script src="@Url.Content("~/js/ratingBuilder.js")">
</script>
<script>
	$(".rate-invoker").on('click', function(){
		$("#feedback-trip-id").val($(this).data('trip-id'));
	});
	$("#rate-driver-visible").on('click', () => {
		$("#rate-driver-hidden").click();
	});
</script>
